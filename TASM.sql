/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.1 		*/
/*  Created On : 10-Aug-2017 14:04:05 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Achievement_Achievement_Term_Achievement]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Achievement_Achievement_Term] DROP CONSTRAINT [FK_Achievement_Achievement_Term_Achievement]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Achievement_Achievement_Term_Achievement_Term]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Achievement_Achievement_Term] DROP CONSTRAINT [FK_Achievement_Achievement_Term_Achievement_Term]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Division_Job_Family]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Division] DROP CONSTRAINT [FK_Division_Job_Family]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Grade_Job_Family]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Grade] DROP CONSTRAINT [FK_Grade_Job_Family]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Training_Training_Type]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Training] DROP CONSTRAINT [FK_Training_Training_Type]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Training_Schedule_Schedule_Classroom]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Training_Schedule] DROP CONSTRAINT [FK_Training_Schedule_Schedule_Classroom]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Training_Schedule_Training]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Training_Schedule] DROP CONSTRAINT [FK_Training_Schedule_Training]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Grade]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User] DROP CONSTRAINT [FK_User_Grade]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Achievement_Achievement]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User_Achievement] DROP CONSTRAINT [FK_User_Achievement_Achievement]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Achievement_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User_Achievement] DROP CONSTRAINT [FK_User_Achievement_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Role_Roles]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User_Role] DROP CONSTRAINT [FK_User_Role_Roles]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Role_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User_Role] DROP CONSTRAINT [FK_User_Role_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Training_Training]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User_Training] DROP CONSTRAINT [FK_User_Training_Training]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Training_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User_Training] DROP CONSTRAINT [FK_User_Training_User]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Achievement]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Achievement]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Achievement_Achievement_Term]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Achievement_Achievement_Term]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Achievement_Term]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Achievement_Term]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Division]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Division]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Grade]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Grade]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Job_Family]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Job_Family]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Role]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Role]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Schedule_Classroom]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Schedule_Classroom]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Training]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Training]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Training_Schedule]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Training_Schedule]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Training_Type]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Training_Type]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[User]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[User_Achievement]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [User_Achievement]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[User_Role]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [User_Role]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[User_Training]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [User_Training]
GO

/* Create Tables */

CREATE TABLE [Achievement]
(
	[achievement_id] int NOT NULL IDENTITY (1, 1),
	[achievement_code] char(10) NULL,
	[achievement_name] varchar(50) NULL,
	[achievement_description] varchar(255) NULL
)
GO

CREATE TABLE [Achievement_Achievement_Term]
(
	[achievement_achievement_term_id] int NOT NULL IDENTITY (1, 1),
	[achievement_id] int NULL,
	[achievement_term_id] int NULL
)
GO

CREATE TABLE [Achievement_Term]
(
	[achievement_term_id] int NOT NULL IDENTITY (1, 1),
	[achievement_term_code] char(10) NULL,
	[achievement_term_name] varchar(50) NULL,
	[achievement_term_description] varchar(255) NULL
)
GO

CREATE TABLE [Division]
(
	[devision_id] int NOT NULL IDENTITY (1, 1),
	[devision_code] char(10) NULL,
	[devision_name] varchar(50) NULL,
	[devision_description] varchar(255) NULL,
	[job_family_id] int NULL
)
GO

CREATE TABLE [Grade]
(
	[grade_id] int NOT NULL IDENTITY (1, 1),
	[grade_code] char(10) NULL,
	[grade_name] varchar(50) NULL,
	[grade_desciption] varchar(255) NULL,
	[job_family_id] int NULL
)
GO

CREATE TABLE [Job_Family]
(
	[job_family_id] int NOT NULL IDENTITY (1, 1),
	[job_family_code] char(10) NULL,
	[job_family_name] varchar(50) NULL,
	[job_family_description] varchar(255) NULL
)
GO

CREATE TABLE [Role]
(
	[role_id] int NOT NULL IDENTITY (1, 1),
	[role_code] char(10) NULL,
	[role_name] varchar(50) NULL,
	[role_desciption] varchar(255) NULL
)
GO

CREATE TABLE [Schedule_Classroom]
(
	[schedule_classroom_id] int NOT NULL,
	[schedule_classroom_code] char(10) NULL,
	[schedule_classroom_name] varchar(50) NULL,
	[schedule_classroom_description] varchar(255) NULL,
	[schedule_classroom_capacity] varchar(50) NULL
)
GO

CREATE TABLE [Training]
(
	[training_id] int NOT NULL IDENTITY (1, 1),
	[training_name] varchar(50) NULL,
	[start_date] timestamp NULL,
	[end_date] timestamp NULL,
	[created_at] timestamp NULL,
	[updated_at] timestamp NULL,
	[deleted_at] timestamp NULL,
	[training_type_id] int NULL
)
GO

CREATE TABLE [Training_Schedule]
(
	[training_schedule_id] int NOT NULL IDENTITY (1, 1),
	[training_schedule_trainer_id] int NULL,
	[training_schedule_backup_trainer_id] varchar(50) NULL,
	[training_schedule_date] timestamp NULL,
	[training_schedule_capacity] int NULL,
	[schedule_classroom_id] int NULL,
	[training_id] int NULL
)
GO

CREATE TABLE [Training_Type]
(
	[training_type_id] int NOT NULL IDENTITY (1, 1),
	[training_type_name] varchar(50) NULL,
	[training_type_description] varchar(255) NULL,
	[training_type_code] char(10) NULL
)
GO

CREATE TABLE [User]
(
	[user_id] int NOT NULL IDENTITY (1, 1),
	[full_name] varchar(50) NULL,
	[email] varchar(50) NULL,
	[account_name] varchar(50) NULL,
	[active] varchar(50) NULL,
	[created_at] timestamp NULL,
	[updated_at] timestamp NULL,
	[deleted_at] timestamp NULL,
	[grade_id] int NULL
)
GO

CREATE TABLE [User_Achievement]
(
	[user_achievement_id] int NOT NULL IDENTITY (1, 1),
	[user_achievement_value] varchar(50) NULL,
	[user_id] int NULL,
	[achievement_id] int NULL
)
GO

CREATE TABLE [User_Role]
(
	[user_role_id] int NOT NULL IDENTITY (1, 1),
	[user_role_status] varchar(50) NULL,
	[user_role_overdue] timestamp NULL,
	[user_id] int NULL,
	[roles_id] int NULL
)
GO

CREATE TABLE [User_Training]
(
	[user_training_id] int NOT NULL IDENTITY (1, 1),
	[status] varchar(50) NULL,
	[user_id] int NULL,
	[training_id] int NULL
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [Achievement] 
 ADD CONSTRAINT [PK_Achievement]
	PRIMARY KEY CLUSTERED ([achievement_id] ASC)
GO

ALTER TABLE [Achievement_Achievement_Term] 
 ADD CONSTRAINT [PK_Achievement_Achievement_Term]
	PRIMARY KEY CLUSTERED ([achievement_achievement_term_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Achievement_Achievement_Term_Achievement] 
 ON [Achievement_Achievement_Term] ([achievement_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Achievement_Achievement_Term_Achievement_Term] 
 ON [Achievement_Achievement_Term] ([achievement_term_id] ASC)
GO

ALTER TABLE [Achievement_Term] 
 ADD CONSTRAINT [PK_Achievement_Term]
	PRIMARY KEY CLUSTERED ([achievement_term_id] ASC)
GO

ALTER TABLE [Division] 
 ADD CONSTRAINT [PK_Division]
	PRIMARY KEY CLUSTERED ([devision_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Division_Job_Family] 
 ON [Division] ([job_family_id] ASC)
GO

ALTER TABLE [Grade] 
 ADD CONSTRAINT [PK_Grade]
	PRIMARY KEY CLUSTERED ([grade_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Grade_Job_Family] 
 ON [Grade] ([job_family_id] ASC)
GO

ALTER TABLE [Job_Family] 
 ADD CONSTRAINT [PK_Job_Family]
	PRIMARY KEY CLUSTERED ([job_family_id] ASC)
GO

ALTER TABLE [Role] 
 ADD CONSTRAINT [PK_Roles]
	PRIMARY KEY CLUSTERED ([role_id] ASC)
GO

ALTER TABLE [Schedule_Classroom] 
 ADD CONSTRAINT [PK_Table1]
	PRIMARY KEY CLUSTERED ([schedule_classroom_id] ASC)
GO

ALTER TABLE [Training] 
 ADD CONSTRAINT [PK_Training]
	PRIMARY KEY CLUSTERED ([training_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Training_Training_Type] 
 ON [Training] ([training_type_id] ASC)
GO

ALTER TABLE [Training_Schedule] 
 ADD CONSTRAINT [PK_Table1]
	PRIMARY KEY CLUSTERED ([training_schedule_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Training_Schedule_Schedule_Classroom] 
 ON [Training_Schedule] ([schedule_classroom_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Training_Schedule_Training] 
 ON [Training_Schedule] ([training_id] ASC)
GO

ALTER TABLE [Training_Type] 
 ADD CONSTRAINT [PK_Table1]
	PRIMARY KEY CLUSTERED ([training_type_id] ASC)
GO

ALTER TABLE [User] 
 ADD CONSTRAINT [PK_User]
	PRIMARY KEY CLUSTERED ([user_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Grade] 
 ON [User] ([grade_id] ASC)
GO

ALTER TABLE [User_Achievement] 
 ADD CONSTRAINT [PK_User_Achievement]
	PRIMARY KEY CLUSTERED ([user_achievement_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Achievement_Achievement] 
 ON [User_Achievement] ([achievement_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Achievement_User] 
 ON [User_Achievement] ([user_id] ASC)
GO

ALTER TABLE [User_Role] 
 ADD CONSTRAINT [PK_User_Role]
	PRIMARY KEY CLUSTERED ([user_role_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Role_Roles] 
 ON [User_Role] ([roles_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Role_User] 
 ON [User_Role] ([user_id] ASC)
GO

ALTER TABLE [User_Training] 
 ADD CONSTRAINT [PK_Table1]
	PRIMARY KEY CLUSTERED ([user_training_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Training_Training] 
 ON [User_Training] ([training_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Training_User] 
 ON [User_Training] ([user_id] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [Achievement_Achievement_Term] ADD CONSTRAINT [FK_Achievement_Achievement_Term_Achievement]
	FOREIGN KEY ([achievement_id]) REFERENCES [Achievement] ([achievement_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Achievement_Achievement_Term] ADD CONSTRAINT [FK_Achievement_Achievement_Term_Achievement_Term]
	FOREIGN KEY ([achievement_term_id]) REFERENCES [Achievement_Term] ([achievement_term_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Division] ADD CONSTRAINT [FK_Division_Job_Family]
	FOREIGN KEY ([job_family_id]) REFERENCES [Job_Family] ([job_family_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Grade] ADD CONSTRAINT [FK_Grade_Job_Family]
	FOREIGN KEY ([job_family_id]) REFERENCES [Job_Family] ([job_family_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Training] ADD CONSTRAINT [FK_Training_Training_Type]
	FOREIGN KEY ([training_type_id]) REFERENCES [Training_Type] ([training_type_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Training_Schedule] ADD CONSTRAINT [FK_Training_Schedule_Schedule_Classroom]
	FOREIGN KEY ([schedule_classroom_id]) REFERENCES [Schedule_Classroom] ([schedule_classroom_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Training_Schedule] ADD CONSTRAINT [FK_Training_Schedule_Training]
	FOREIGN KEY ([training_id]) REFERENCES [Training] ([training_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [User] ADD CONSTRAINT [FK_User_Grade]
	FOREIGN KEY ([grade_id]) REFERENCES [Grade] ([grade_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [User_Achievement] ADD CONSTRAINT [FK_User_Achievement_Achievement]
	FOREIGN KEY ([achievement_id]) REFERENCES [Achievement] ([achievement_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [User_Achievement] ADD CONSTRAINT [FK_User_Achievement_User]
	FOREIGN KEY ([user_id]) REFERENCES [User] ([user_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [User_Role] ADD CONSTRAINT [FK_User_Role_Roles]
	FOREIGN KEY ([roles_id]) REFERENCES [Role] ([role_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [User_Role] ADD CONSTRAINT [FK_User_Role_User]
	FOREIGN KEY ([user_id]) REFERENCES [User] ([user_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [User_Training] ADD CONSTRAINT [FK_User_Training_Training]
	FOREIGN KEY ([training_id]) REFERENCES [Training] ([training_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [User_Training] ADD CONSTRAINT [FK_User_Training_User]
	FOREIGN KEY ([user_id]) REFERENCES [User] ([user_id]) ON DELETE No Action ON UPDATE No Action
GO
